/*let's test*/

/*@import url("https://fonts.googleapis.com/css2?family=Fuggles&family=Zen+Tokyo+Zoo&display=swap");  /* importing google fonts , always import on top of css style code */
* {
  /* universal selector */
  /* usually used to reset the default browser style */
  color: rgb(128, 115, 64);
}

:root {
  /* font-size: 110%; /* we use root element to change properties globally, rem values depend on this */
  background: rgb(39, 48, 74);
  /*margin-top: -86px;*/
  --h1xcolor: #1213f4;
  /* CSS variable */
  --xtransition: all 0.4s linear;
}

#top {
  text-decoration: line-through;
  color: rgba(255,
      255,
      000,
      0.4);
  /* RGBA- A=(alpha) opacity/transparency value=(0-1) */
  border: 4px solid blueviolet;
  /* order matter > width type color */
  border-radius: 20px;
  max-width: 400px;
  font-size: 16px;
  padding-inline: 60px;
  margin-left: auto;
  margin-right: auto;
  background: #09b1d0;
  color: brown;
  text-align: center;
  font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande",
    "Lucida Sans", Arial, sans-serif;
  /* the "Zen Tokyo Zoo"(imported grom google fonts) font is only gonna work when connected to internet otherwise the default font from the family will show-up */
}

@media screen and (min-width: 500px) {
  #top {
    background: crimson;
    color: cyan;
    font-size: 80px;
    font-style: oblique;
  }
}

@media screen and (min-width: 600px) {
  #top {
    background: seashell;
    color: rgb(5, 1, 7);
    font-family: monospace;
    font-style: oblique;
    font-size: 2rem;
    text-decoration: wavy;
  }
}

.p01 {
  font-size: 20px;
  font-style: italic;
  color: chartreuse;
}

.p01::before {
  content: "psuedo element";
  /* psuedo element */
  color: #e0ca3c;
  font-size: 40px;
  font-weight: bold;
}

.p01::after {
  content: "royale";
  text-align: right;
  color: rgba(124, 196, 238, 0.479);
  font-size: 24px;
  font-style: normal;
  display: block;
  background: rgba(024, 44, 96, 0.2);
}

.p01:hover {
  color: #642a5d;
  text-align: justify;
  text-decoration: line-through;
  background-color: rgb(18, 1, 24);
}

.al:hover {
  background: rgb(151, 134, 163);
}

.al:link {
  color: #e647d4;
}

.al:visited {
  color: red;
}

.al:active {
  color: green;
}

#test1 {
  font-size: 36px;
  color: #09b1d0;
  text-transform: uppercase;
}

.test1 {
  color: #e0ca3c;
  /* it won't work bcoz the h1 is under a list */
}

.test1 h1 {
  /* child and descendent */
  /* this is how we define style for elements inside a list */
  font-style: italic;
  text-transform: capitalize;
  font-size: 24px;
}

.p42 {
  font-family: monospace;
  letter-spacing: 18px;
  font-weight: bold;
  color: beige;
  margin-bottom: 60px;
}

.p42::first-line {
  font-size: 32px;
  color: #e0ca3c;
}

.p42::first-letter {
  font-size: 77px;
}

.img2 {
  border: 2px red solid;
  position: relative;
  width: 60vw;
  margin: 40px auto;
}

.i5 {
  width: 100%;
  display: block;
}

.img2::before {
  content: "";
  /* content required */
  /* img doesn't support psuedo elements */
  border: 2px rgb(46, 192, 46) solid;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
  position: absolute;
  top: -40px;
  left: -50px;
  z-index: -2;
}

.img2::after {
  content: "";
  background: rgba(255, 192, 46, 0.5);
  width: 100%;
  height: 100%;
  top: -20px;
  left: -25px;
  position: absolute;
  z-index: -2;
  box-sizing: border-box;
}

.img1 {
  border: 4px rgba(160, 255, 67, 0.37) solid;
  height: 80vh;
  width: 45vw;
  position: relative;
  margin: 10px;
}

.i1 {
  top: 0;
  left: 0;
  height: 100px;
  width: 100px;
  position: absolute;
  z-index: 1;
  /* z-index decides the place of element on z-axis */
}

.i2 {
  top: 10%;
  left: 10%;
  height: 100px;
  width: 100px;
  position: absolute;
}

.i3 {
  top: 20%;
  left: 20%;
  height: 100px;
  width: 100px;
  position: absolute;
  z-index: -1;
  /* Negative value of z-index makes the element disappear */
}

.i4 {
  top: 30%;
  left: 30%;
  height: 100px;
  width: 100px;
  position: absolute;
  z-index: 5;
  /* z-index does'nt work for static element */
}

.banner

/* a banner */
  {
  width: 55vw;
  /* vw - view width */
  height: 10vh;
  /* vh - view hieght */
  background-color: #e0ca3c;
  margin: 6px;
  border-color: rgb(236, 10, 10);
  border-width: 16px;
  border-bottom-color: darkgreen;
  border-style: solid;
  border-bottom-style: dotted;
  border-bottom-width: 9px;
}

.banner2

/*  */
  {
  width: 97vw;
  height: calc(100vh - 86vh);
  /* calc function (give space inbetween) */
  background-color: #136f63;
  margin-left: 6px;
  margin-bottom: 32px;
  margin-top: 30px;
  outline: 5px solid #e0ca3c;
  /* outline-offset: 12px; */
}

a {
  text-decoration: none;
  /*removes underline from links*/
  color: rgb(25, 51, 167);
  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
  /* font family. Here sans-serif is generic font family */
}

h4,
h5 {
  color: rgb(0, 255, 0);
  /* RGB- Red Green Blue value=(0-255) */
  font-family: monospace;
  font-size: 30px;
}

.p1 {
  width: 400px;
  font-style: initial;
  text-align: right;
  text-indent: 120px;
  line-height: 2em;
  text-transform: capitalize;
}

.p2 {
  width: 70%;
  text-align: center;
  letter-spacing: 4px;
  word-spacing: 20px;
  text-transform: uppercase;
  text-decoration: overline;
}

.h11 {
  color: var(--h1xcolor);
  text-shadow: 4px -3px 17px rgba(150, 150, 106, 1);
  /* (text-shadow: positinX positinY shadow-size color;) propertie for showing text-shadow.  */
}

.h12 {
  color: var(--h1xcolor);
  transition: var(--xtransition);
}

.h13:hover {
  color: var(--h1xcolor);
}

.d31 {
  /* we can also use div for defining local varaible here */
  --color3x: #23e44e;
  /* we can't use this variable out of this .d31 class */
}

.text2 {
  color: var(--color3x);
}

.box11 {
  width: 200px;
  height: 200px;
  background: rgb(65, 139, 65);
  margin: 90px;
  box-shadow: 20px -30px 70px -11px var(--h1xcolor);
  /* (box-shadow: positinX positinY shadow-size shadow-spread color;) propertie for showing box-shadow.  */
}

.relative1 {
  font-size: 1em;
  /* em is relative to the parent (1em = 16px default browser style = base value) */
}

.relative2 {
  font-size: 2em;
  font-family: "Fuggles", cursive;
}

.relative3 {
  font-size: 3rem;
  /* rem is relative to the root(html style) */
}

.absolute {
  font-size: 30px;
  /* px is an absolute value (not dependent on any element) */
}

.outer {
  width: 150px;
  height: 80px;
  background-color: chartreuse;
}

.inner {
  width: 80%;
  /* percent - relative values*/
  /* only works with div tag*/

  height: 50%;
  background-color: chocolate;
}

.st1

/* class selector */
  {
  font-size: 40px;
  width: 40%;
  color: #09b1d0;
  /* HEX values #RRGGBB value=(0-9-A-E) */
  background-color: #093f;
  font-family: helvetica;
  /*
  padding-top: 150px;
  padding-right: 100px;
  padding-bottom: 150px;
  padding-left: 200px;
  */
  /* padding: 50px; /* padding = 50px from all sides */
  /* padding: 60px 40px; /* here padding top = bottom = 60px and right = left = 40px */
  padding: 10px 30px 10px 90px;
  /* here padding form is top,right,bottom,left */
}

.st2 {
  text-transform: uppercase;
}

.st3 {
  color: #136f63;
  background-color: #fff;
}

.el1 {
  background-color: aqua;
  display: block;
  /* we can change display propertie of inline element (span tag) to block */
  width: 100px;
  margin: 3px auto;
  /* we can make div(block element) in center using this auto left-right propertie, it won't work on inline elements*/
}

.el2 {
  background-color: #e0ca3c;
  display: inline;
  /* we can change display propertie of block element (div tag) to inline */
}

ul li {
  list-style-type: none;
}

ul li a {
  text-decoration: none;
  letter-spacing: 4px;
  background-color: aqua;
  margin: 10px 22px;
  padding: 6px;
  line-height: 40px;
}

.ul11 {
  background-color: bisque;
  color: #136f63;
  display: inline-block;
  margin: 22px;
}

.box1,
.box2,
.box3 {
  width: 200px;
  height: 200px;
  color: #fff;
}

.box1 {
  background-color: rgba(095, 195, 090, 0.7);
  padding: 20px;
  box-sizing: border-box;
  /* it fixes the size of box and padding is now inside the box */
}

.box2 {
  background-color: blue;
  border: 30px;
}

.box3 {
  background-color: yellow;
  padding: 19px;
}

.big-img,
.small-img {
  height: 400px;
}

.big-img {
  background: url("/media/jupiter.jpg");
  background-size: cover;
  background-attachment: fixed;
}

.small-img {
  border: 3px solid green;
  background: url("/media/beach.jpg");
  /* image resolution needs to be modified or if res of image is low it will create multiple show of the image for the given space */
  background-repeat: no-repeat;
  /* background-position: center; */
  background-position: 40% 90%;
}

.t1,
.t2,
.t3,
.t4,
.t5,
.t6 {
  height: 150px;
  width: 150px;
  display: inline-block;
  margin-left: 4rem;
}

.t1 {
  background: red;
  transform: translateX(-30px);
  transform: translateY(-30%);
  /* this percent value is in respect to element height(here 150px) */
  /* transform: translate(40px, 100px); */
  transition-property: border-radius;
  transition-duration: 0.4s;
}

.t2 {
  background: green;
  transform: scaleX(2.7);
  /* it cut-outs the part(0.15%) from each side */
  transition: all 1s 2s;
}

.t3 {
  background: blue;
  transform: rotatex(64deg);
  /* if I make the ratatex or ratateY value 90 then the 2D element will not be visible */
  transition: background 3s 2s, border-radius 1.2s 2s;
  /* here first time is transition-duration and second is transition-delay */
}

.t4 {
  background: #e0ca3c;
  transform: skew(-41deg);
}

.t5 {
  background: #e64bd4;
  transform: skewY(67deg);
  transition-delay: 3s;
}

.t6 {
  background: #fff;
  transform: skew(30deg, 15deg);
  transition-property: border-radius, background;
  transition-duration: 1s, 2.5s;
}

.t2:hover,
.t3:hover,
.t4:hover,
.t5:hover,
.t6:hover {
  background: #4503d7;
}

.t1:hover {
  border-radius: 20%;
}

.t2:hover {
  border-radius: 50%;
  border: #fff 8px solid;
}

.t3:hover {
  border-radius: 25%;
}

.t6:hover {
  background: #00f300;
  border-radius: 50%;
}

.t11,
.t12,
.t13,
.t14,
.t15,
.t16 {
  height: 120px;
  width: 120px;
  background: rgb(0, 0, 255);
  color: #fff;
  margin: 20px;
  transition: all 1s;
}

.t11:hover,
.t12:hover,
.t13:hover,
.t14:hover,
.t15:hover,
.t16:hover {
  transform: translateX(100px);
}

/* transition-timing-function(s)  */
.t12 {
  transition-timing-function: ease;
}

.t13 {
  transition-timing-function: linear;
}

.t14 {
  transition-timing-function: ease-in;
}

.t15 {
  transition-timing-function: ease-out;
}

.t16 {
  transition-timing-function: ease-in-out;
}

.transition,
.animation,
.animation1 {
  width: 150px;
  height: 120px;
  color: rgb(100, 71, 32);
  margin: 5px;
}

.transition {
  background: blueviolet;
  transition: all 1s linear;
}

.transition:hover {
  background: chartreuse;
  transform: translateX(100px);
}

.animation {
  background: hotpink;
  /* animation-name: move;
  animation-duration: 10s;
  animation-iteration-count: 2; */
  animation: move 10s infinite;
}

@keyframes move {
  0% {
    transform: translateX(20px);
  }

  50% {
    transform: translateX(100px);
    background: chocolate;
  }

  75% {
    transform: translateX(-200px);
    background: gainsboro;
  }

  100% {
    transform: translateX(20px);
    background: hotpink;
  }
}

.animation1 {
  background: rgb(0, 255, 0);
  animation: move 4s 2;
  animation-fill-mode: forwards;
}

@keyframes move {
  0% {
    opacity: 0;
  }

  25% {
    transform: translateX(200px);
    opacity: 0.6;
  }

  50% {
    transform: translateX(-100px);
    opacity: 1;
  }

  100% {
    transform: translateX(200px);
    opacity: 0.5;
  }
}

.d01,
.d02,
.d03,
.d04,
.d05 {
  background-color: rgb(46, 192, 46);
  margin: 10px;
  color: #fff;
}

.d01 {
  display: none;
}

.d02 {
  opacity: 0.3;
}

.d03 {
  opacity: 1;
}

.d04 {
  opacity: 0.43;
}

.d05 {
  visibility: hidden;
}

.d1,
.d2,
.d3,
.d4,
.d5,
.d6 {
  width: 150px;
  height: 150px;
  margin: 6px;
}

.d1 {
  background: linear-gradient(rgb(170, 98, 98), green);
}

.d2 {
  background: linear-gradient(to top,
      red,
      green);
  /* ny default its "to bottom" */
}

.d3 {
  background: linear-gradient(48deg, rgb(177, 99, 99), green);
}

.d4 {
  background: linear-gradient(rgba(111, 48, 255, 0.6), rgba(0, 0, 0, 0.9));
}

.d5 {
  background: linear-gradient(to top right, white, rgba(0, 0, 0, 0.75));
}

.op1,
.op2 {
  min-height: 100vh;
  align-items: center;
  display: flex;
  text-align: center;
  justify-content: center;
}

.op1 {
  background: url(/media/jupiter.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
}

.op2 {
  background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(255, 0, 0, 0.8));
  background: url(/media/beach.jpg) center/cover fixed no-repeat;
  /* order */
  color: tomato;
}

.op3 {
  border: 3px tomato solid;
  padding: 16px;
  overflow: hidden;
  /* it hides the part of object out of the border*/
}

.op4 {
  float: left;
  height: 400px;
  margin-right: 22px;
}

.op5 {
  float: right;
  margin-bottom: -6px;
}

.op6 {
  clear: right;
}

.d11 {
  float: left;
  background: rgb(3, 70, 3);
  height: 100px;
  width: 33vw;
}

.d12 {
  float: left;
  background: rgb(75, 24, 134);
  height: 120px;
  width: 31vw;
}

.d13 {
  float: left;
  background: white;
  height: 90px;
  width: 33vw;
}

.d20 {
  border: 4px rgb(41, 138, 70) solid;
  margin-top: 320px;
  background: rgb(230, 12, 230);
  /*position: static; */
  position: relative;
}

.d21 {
  background: yellow;
  position: relative;
  top: 40px;
  left: 20rem;
}

.d22 {
  background: #0faeca;
}

.d23 {
  font-size: 24px;
  background: #fff;
  position: absolute;
  top: 0;
  right: 5px;
}

.d24 {
  text-align: justify;
  color: rgb(11, 133, 51);
}

.d25 {
  font-size: 1rem;
  font-weight: bold;
  color: #fff;
  border-radius: 12px;
  border: 4px #0f4505 solid;
  background: rgba(192, 236, 236, 0.3);
  position: fixed;
  bottom: 60px;
  left: 8px;
  z-index: 2;
}